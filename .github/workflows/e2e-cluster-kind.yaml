name: e2e-cluster-kind

on: pull_request

defaults:
  run:
    shell: bash

jobs:
  e2e-cluster-kind-run:
    runs-on: ubuntu-22.04
    steps:
      - name: kind-cluster
        uses: helm/kind-action@v1.5.0
        with:
          cluster_name: kgw
          wait: 256s
          verbosity: 1

      - name: kubectl-get-services-all-namespaces-pre-loadbalancer-configuration
        run: |
          kubectl get svc --all-namespaces

      - name: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: configure-loadbalancer
        run: |
          ./smoketests/cluster-config/kind/cluster-configure.sh

      - name: kubectl-get-services-all-namespaces-post-loadbalancer-configuration
        run: |
          kubectl get svc --all-namespaces

      # - name: install-dependencies
      #   run: |
      #     mkdir -pv /tmp/kusk
      #     cd /tmp/kusk
      #     wget -qO- https://github.com/kubeshop/kusk-gateway/releases/download/v1.5.4/kusk_1.5.4_Linux_x86_64.tar.gz | tar -vxz
      #     ./kusk cluster install --no-api
      #     echo 'Waiting for `service/kusk-gateway-envoy-fleet` to get ingress ...'
      #     while [[ -z $(kubectl get service --namespace kusk-system kusk-gateway-envoy-fleet -o jsonpath="{.status.loadBalancer.ingress}" 2>/dev/null) ]]; do
      #       echo "still waiting for service/kusk-gateway-envoy-fleet to get ingress"
      #       sleep 1
      #     done
      #     echo "service/kusk-gateway-envoy-fleet now has ingress"

      # - name: kubectl-get-services-all-namespaces-post-kusk-install
      #   run: |
      #     kubectl get svc --all-namespaces

      - name: setup-go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18

      - name: make-docker-build
        run: |
          echo 'building `kusk-gateway-manager` (control-plane) image'
          make docker-build

      - name: kind-load-docker-image
        run: |
          set -x
          kind load docker-image kubeshop/kusk-gateway:$(git describe --tags $(git rev-list --tags --max-count=1)) --name kgw

      - name: make-install
        run: |
          make install
          kubectl get svc --all-namespaces

      - name: make-deploy
        run: |
          echo 'installing `kusk-gateway-manager` (control-plane) image into cluster'
          make deploy
          kubectl get svc --all-namespaces
          kubectl rollout status --namespace kusk-system deployment/kusk-gateway-manager --watch --timeout=256s

      - name: make-deploy-envoyfleet
        run: |
          echo 'deploying `kusk-gateway-envoy-fleet` (default Envoy Fleet)'
          until make deploy-envoyfleet; do
            # A timing issue sometimes results in the below occuring:
            # Error from server (InternalError): error when creating "config/samples/gateway_v1_envoyfleet.yaml": Internal error occurred: failed calling webhook "menvoyfleet.kb.io": failed to call webhook: Post "https://kusk-gateway-webhooks-service.kusk-system.svc:443/mutate-gateway-kusk-io-v1alpha1-envoyfleet?timeout=10s": dial tcp 10.109.220.117:443: connect: connection refused
            echo "sleeping for 2 seconds before trying 'make deploy-envoyfleet' again ..."
            sleep 2
          done

          echo 'Waiting for `service/kusk-gateway-envoy-fleet` to get ingress ...'
          while [[ -z $(kubectl get service --namespace kusk-system kusk-gateway-envoy-fleet -o jsonpath="{.status.loadBalancer.ingress}" 2>/dev/null) ]]; do
            echo "still waiting for service/kusk-gateway-envoy-fleet to get ingress, sleeping for 2 seconds ..."
            sleep 2
          done
          echo "service/kusk-gateway-envoy-fleet now has ingress"
          kubectl get svc --all-namespaces

      - name: run-e2e
        run: |
          make check-all
