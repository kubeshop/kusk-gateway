name: Pull Request
on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
    branches:
      - main
    paths:
      - .github/workflows/**
      - api/**
      - build/**
      - cmd/**
      - examples/**
      - internal/**
      - pkg/**
      - smoketests/**

jobs:
  test-kusk-cli:
    name: Compile and Test Kusk CLI
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.19
      - name: build-cli
        working-directory: cmd/kusk
        run: VERSION=pr-${{ github.event.pull_request.number }} make build
      - name: k3s
        run: |
          curl -sfL https://get.k3s.io | K3S_KUBECONFIG_MODE=777 INSTALL_K3S_EXEC="server --no-deploy traefik" sh -
          cat /etc/rancher/k3s/k3s.yaml
          mkdir -p ~/.kube
          cp /etc/rancher/k3s/k3s.yaml ~/.kube/config 
      - name: run_kusk_install
        working-directory: cmd/kusk
        run: pwd && ./kusk cluster install

      # - name: test-cli
      #   working-directory: cmd/kusk
      #   run: make test

  compilation-and-unit-test-manager:
    name: Compile and Test Manager
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.19
      # - name: Compile and Test manager
      #   run: make test TelemetryToken=${{ secrets.TELEMETRY_TOKEN }}

  # build-docker:
  #   needs: [compilation-and-unit-test-manager]
  #   name: "Build Image"
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #       with:
  #         fetch-depth: 0

      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v1

      # - name: Cache Docker layers
      #   uses: actions/cache@v2
      #   with:
      #     path: /tmp/.buildx-cache
      #     key: ${{ runner.os }}-buildx-${{ github.sha }}
      #     restore-keys: |
      #       ${{ runner.os }}-buildx-

      # - name: Login to DockerHub
      #   uses: docker/login-action@v1
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}

      # - name: Build and push
      #   uses: docker/build-push-action@v2
      #   with:
      #     context: .
      #     file: build/manager/Dockerfile
      #     tags: kubeshop/kusk-gateway:pr-${{ github.event.pull_request.number }}
      #     push: true
      #     platforms: linux/amd64
      #     cache-from: type=local,src=/tmp/.buildx-cache
      #     cache-to: type=local,dest=/tmp/.buildx-cache-new
      #     build-args: |
      #       TELEMETRY_TOKEN=${{ secrets.TELEMETRY_TOKEN }}

      # - name: Update docker cache
      #   run: |
      #     rm -rf /tmp/.buildx-cache
      #     mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  # deploy:
  #   needs: build-docker
  #   name: Deploy
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout
  #       run: |
  #         curl -sfL https://get.k3s.io | K3S_KUBECONFIG_MODE=777 INSTALL_K3S_EXEC="server --no-deploy traefik" sh -
  #         cat /etc/rancher/k3s/k3s.yaml
  #         mkdir -p ~/.kube
  #         cp /etc/rancher/k3s/k3s.yaml ~/.kube/config

  #     - name: Deploy
  #       # working-directory: cmd/kusk
  #       run: |
  #         cmd/kusk/kusk cluster install
  #     - name: Run e2e Tests
  #       run: |
  #         make check-all
