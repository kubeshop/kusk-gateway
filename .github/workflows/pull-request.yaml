name: Pull Request
on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
    branches:
      - main
    paths:
      - .github/workflows/**
      - api/**
      - build/**
      - cmd/**
      - examples/**
      - internal/**
      - pkg/**
      - smoketests/**

jobs:
  test-kusk-cli:
    name: Compile and Test Kusk CLI
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: cmd/kusk
    steps:
      - uses: actions/checkout@v2
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17
      - name:
        run: make test
  compilation-and-unit-test-manager:
    name: Compile and Test Manager
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17
      - name: Compile and Test manager
        run: make test TelemetryToken=${{ secrets.TELEMETRY_TOKEN }}

  build-docker:
    needs: [compilation-and-unit-test-manager]
    name: "Build Image"
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: .
        file: build/manager/Dockerfile
        tags: kubeshop/kusk-gateway:pr-${{ github.event.pull_request.number }}
        push: true
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new
        build-args: |
          TELEMETRY_TOKEN=${{ secrets.TELEMETRY_TOKEN }}
          TELEMETRY_TOKEN=${{ secrets.TELEMETRY_TOKEN }}
    - name: Update docker cache
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  deploy:
    needs: build-docker
    name: Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - uses: google-github-actions/setup-gcloud@94337306dda8180d967a56932ceb4ddcf01edae7
      with:
        service_account_key: ${{ secrets.GKE_SA_KEY }}
        project_id: ${{ secrets.GKE_PROJECT }}

    - uses: google-github-actions/get-gke-credentials@fb08709ba27618c31c09e014e1d8364b02e5042e
      with:
        cluster_name: ${{ secrets.GKE_CLUSTER }}
        location: ${{ secrets.GKE_ZONE }}
        credentials: ${{ secrets.GKE_SA_KEY }}

    - name: Deploy
      run: |
        helm repo add kubeshop https://kubeshop.github.io/helm-charts
        helm repo update
        helm upgrade kusk-gateway-pr-${{ github.event.pull_request.number }} kubeshop/kusk-gateway \
          --install --namespace kusk-gateway-pr-${{ github.event.pull_request.number }} --create-namespace \
          --set analytics.enabled=false \
          --set manager.image.tag=pr-${{ github.event.pull_request.number }} \
          --set manager.image.pullPolicy=Always \
          --wait --timeout 3m
        helm upgrade kusk-gateway-envoyfleet-pr-${{ github.event.pull_request.number }} kubeshop/kusk-gateway-envoyfleet \
          --install --namespace default --set fullnameOverride=default \
          --wait --timeout 3m

  e2e:
    needs: deploy
    name: Run e2e tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17

      - uses: google-github-actions/setup-gcloud@94337306dda8180d967a56932ceb4ddcf01edae7
        with:
          service_account_key: ${{ secrets.GKE_SA_KEY }}
          project_id: ${{ secrets.GKE_PROJECT }}

      - uses: google-github-actions/get-gke-credentials@fb08709ba27618c31c09e014e1d8364b02e5042e
        with:
          cluster_name: ${{ secrets.GKE_CLUSTER }}
          location: ${{ secrets.GKE_ZONE }}
          credentials: ${{ secrets.GKE_SA_KEY }}

      - name: Run e2e Tests
        run: |
          make check-all

  cleanup:
    runs-on: ubuntu-latest
    needs: e2e
    if: always()
    steps:
      - uses: google-github-actions/setup-gcloud@94337306dda8180d967a56932ceb4ddcf01edae7
        with:
          service_account_key: ${{ secrets.GKE_SA_KEY }}
          project_id: ${{ secrets.GKE_PROJECT }}

      - uses: google-github-actions/get-gke-credentials@fb08709ba27618c31c09e014e1d8364b02e5042e
        with:
          cluster_name: ${{ secrets.GKE_CLUSTER }}
          location: ${{ secrets.GKE_ZONE }}
          credentials: ${{ secrets.GKE_SA_KEY }}

      - name: Uninstall kusk-gateway and envoy-fleet
        run: |
          helm delete  kusk-gateway-envoyfleet-pr-${{ github.event.pull_request.number }} \
            --namespace default
          helm delete kusk-gateway-pr-${{ github.event.pull_request.number }} \
            --namespace kusk-gateway-pr-${{ github.event.pull_request.number }} 
          kubectl delete ns kusk-gateway-pr-${{ github.event.pull_request.number }} 