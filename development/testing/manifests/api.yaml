apiVersion: gateway.kusk.io/v1alpha1
kind: API
metadata:
  name: todo
  namespace: testing
spec:
  fleet:
    name: testing
    namespace: testing
  spec: |
    openapi: 3.0.0
    info:
      title: Todo-Backend API
      version: 1.0.0
    x-kusk:
      hosts: [ "example.org", "example.com"]
      rate_limit:
        requests_per_unit: 2
        unit: minute
        per_connection: false
        response_code: 429
      cors:
        origins:
          - 'http://example.org'
          - 'http://example.com'
        methods:
          - POST
          - PATCH
          - DELETE
          - PUT
          - GET
          - OPTIONS
        headers:
          - Content-Type
        credentials: true
        max_age: 86200
      upstream:
        service:
          namespace: testing
          name: todo-backend
          port: 3000
        rewrite:
          pattern: "^/testing/"
          substitution: "/"
      path:
        prefix: /testing
    paths:
      /todos/{id}:
        get:
          responses:
            '200':
              description: ''
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      title:
                        type: string
                        description: Description of what to do
                      completed:
                        type: boolean
                      order:
                        type: integer
                        format: int32
                      url:
                        type: string
                    required:
                      - title
                      - completed
                      - order
                      - url
            '400':
              description: Client error
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/endpoints.Errors'
            '500':
              description: Server error
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/endpoints.Errors'
          summary: Shows a single Todo
          parameters:
            - name: id
              in: path
              schema:
                type: integer
              required: true
          tags:
            - Todo
        delete:
          responses:
            '200':
              description: ''
            '400':
              description: Client error
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/endpoints.Errors'
            '500':
              description: Server error
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/endpoints.Errors'
          summary: Deletes this Todo
          parameters:
            - name: id
              in: path
              schema:
                type: integer
              required: true
          tags:
            - Todo
        patch:
          responses:
            '200':
              description: ''
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      title:
                        type: string
                        description: Description of what to do
                      completed:
                        type: boolean
                      order:
                        type: integer
                        format: int32
                      url:
                        type: string
                    required:
                      - title
                      - completed
                      - order
                      - url
            '400':
              description: Client error
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/endpoints.Errors'
            '500':
              description: Server error
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/endpoints.Errors'
          summary: Modifies this Todo
          parameters:
            - name: id
              in: path
              schema:
                type: integer
              required: true
          requestBody:
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    title:
                      type: string
                    completed:
                      type: boolean
                    order:
                      type: integer
                      format: int32
          tags:
            - Todo
      # Mocked
      # In "responses" there are multiple examples
      /mocked/multiple/{id}:
        # Enable mocking with x-kusk
        x-kusk:
          mocking:
            enabled: true
        get:
          responses:
            '200':
              description: 'Mocked ToDos'
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      title:
                        type: string
                        description: Description of what to do
                      completed:
                        type: boolean
                      order:
                        type: integer
                        format: int32
                      url:
                        type: string
                    required:
                      - title
                      - completed
                      - order
                      - url
                  # This example is the must for the response body mocking
                  examples:
                    first:
                      value:
                        title: "Mocked title #1"
                        completed: true
                        order: 12
                        url: "http://mockedURL.com"
                    second:
                      value:
                        title: "Mocked title #2"
                        completed: true
                        order: 13
                        url: "http://mockedURL.com"
                text/plain:
                  example: |
                    title: "Mocked title with text example
                    completed: true
                    order: 13
                    url: "http://mockedURL.com"
                application/xml:
                  example:
                    title: "Mocked title with XML example"
                    completed: true
                    order: 13
                    url: "http://mockedURL.com"
            '400':
              description: Client error
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/endpoints.Errors'
            '500':
              description: Server error
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/endpoints.Errors'
          summary: Shows a single Todo
          parameters:
            - name: id
              in: path
              schema:
                type: integer
              required: true
          tags:
            - Todo
      # In "responses" here is only one example
      /mocked/{id}:
        # Enable mocking with x-kusk
        x-kusk:
          mocking:
            enabled: true
        get:
          responses:
            '200':
              description: 'Mocked ToDos'
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      title:
                        type: string
                        description: Description of what to do
                      completed:
                        type: boolean
                      order:
                        type: integer
                        format: int32
                      url:
                        type: string
                    required:
                      - title
                      - completed
                      - order
                      - url
                  # This example is the must for the response body mocking
                  example:
                    title: "Mocked JSON title"
                    completed: true
                    order: 13
                    url: "http://mockedURL.com"
                application/xml:
                  example:
                    title: "Mocked XML title"
                    completed: true
                    order: 13
                    url: "http://mockedURL.com"
                text/plain:
                  example: |
                    title: "Mocked Text title"
                    completed: true
                    order: 13
                    url: "http://mockedURL.com"
            '400':
              description: Client error
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/endpoints.Errors'
            '500':
              description: Server error
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/endpoints.Errors'
          summary: Shows a single Todo
          parameters:
            - name: id
              in: path
              schema:
                type: integer
              required: true
          tags:
            - Todo
        delete:
          responses:
            # mocking should return simple 200 on delete
            '200':
              description: ''
            '400':
              description: Client error
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/endpoints.Errors'
            '500':
              description: Server error
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/endpoints.Errors'
          summary: Deletes this Todo
          parameters:
            - name: id
              in: path
              schema:
                type: integer
              required: true
          tags:
            - Todo
        patch:
          # Disable mocking for this operation
          x-kusk:
            mocking:
              enabled: false
          responses:
            '200':
              description: ''
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      title:
                        type: string
                        description: Description of what to do
                      completed:
                        type: boolean
                      order:
                        type: integer
                        format: int32
                      url:
                        type: string
                    required:
                      - title
                      - completed
                      - order
                      - url
            '400':
              description: Client error
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/endpoints.Errors'
            '500':
              description: Server error
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/endpoints.Errors'
          summary: Modifies this Todo
          parameters:
            - name: id
              in: path
              schema:
                type: integer
              required: true
          requestBody:
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    title:
                      type: string
                    completed:
                      type: boolean
                    order:
                      type: integer
                      format: int32
          tags:
            - MockedTodo
      /todos:
        x-kusk:
          cors:
            origins:
              - 'http://example.org'
              - 'http://example.com'
            methods:
              - POST
              - DELETE
              - GET
            headers:
              - Content-Type
            credentials: false
            max_age: 10200
        get:
          responses:
            '200':
              description: The full list of todos
              content:
                application/json:
                  schema:
                    type: array
                    items:
                      type: object
                      properties:
                        title:
                          type: string
                          description: Description of what to do
                        completed:
                          type: boolean
                        order:
                          type: integer
                          format: int32
                        url:
                          type: string
                      required:
                        - title
                        - completed
                        - order
                        - url
            '400':
              description: Client error
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/endpoints.Errors'
            '500':
              description: Server error
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/endpoints.Errors'
          summary: Lists all Todos
          description: The returned Todos are ordered by 'order' and then 'title'
          tags:
            - Todo
        post:
          responses:
            '201':
              description: ''
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      title:
                        type: string
                        description: Description of what to do
                      completed:
                        type: boolean
                      order:
                        type: integer
                        format: int32
                      url:
                        type: string
                    required:
                      - title
                      - completed
                      - order
                      - url
            '400':
              description: Client error
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/endpoints.Errors'
            '500':
              description: Server error
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/endpoints.Errors'
          summary: Creates a new, uncompleted Todo
          requestBody:
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    title:
                      type: string
                      description: Description of what to do
                    order:
                      type: integer
                      format: int32
                  required:
                    - title
          tags:
            - Todo
        delete:
          responses:
            '200':
              description: ''
            '400':
              description: Client error
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/endpoints.Errors'
            '500':
              description: Server error
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/endpoints.Errors'
          summary: Deletes all Todos
          tags:
            - Todo
    components:
      schemas:
        endpoints.Errors:
          type: array
          items:
            type: string
