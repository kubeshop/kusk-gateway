apiVersion: gateway.kusk.io/v1alpha1
kind: StaticRoute
metadata:
  name: todo-frontend
  namespace: testing
spec:
  fleet:
    name: testing
    namespace: testing
  hosts: [ "example.org", "example.com"]
  paths:
    /: 
      get:
        redirect:
          path_redirect: "/testing/"
    /testing/:
       get:
        route:
         upstream: &upstream
            service:
              namespace: testing
              name: todo-frontend
              port: 3000
            rewrite:
              pattern: "^/testing/"
              substitution: "/"
    # Testing API
    # Note that this route covers /testing/staticroute/todos (exact), unless there is other exact.
    /testing/staticroute/:
       get: &sr
        route:
          cors:
            origins:
              - 'http://example.org'
              - 'http://example.com'
            methods:
              - POST
              - GET
            headers:
              - Content-Type
            credentials: true
            max_age: 86200
          upstream:
            service:
              namespace: testing
              name: todo-backend
              port: 3000
            rewrite:
              pattern: "^/testing/staticroute/"
              substitution: "/"
       post: *sr
    # Todos Get and POST on separate path
    # Note that this route doesn't cover /testing/staticroute/todos (exact)
    /testing/staticroute/todos/:
       get: &todos
        route:
          cors:
            origins:
              - 'http://example.org'
              - 'http://example.com'
            methods:
              - POST
              - GET
              - DELETE
              - PATCH
            headers:
              - Content-Type
            credentials: false
            max_age: 1000
          upstream:
            service:
              namespace: testing
              name: todo-backend
              port: 3000
            rewrite:
              pattern: "^/testing/staticroute/"
              substitution: "/"
       post: *todos
    # Testing redirects
    /non-existent: 
      get:
        redirect:
          # http://example.com/non-existent?blabla=1 -> https://non-existent.com:8443/non-existent/1?blabla=1
          host_redirect: "non-existent.com"
          path_redirect: "/non-existent/1"
          port_redirect: 8443
          scheme_redirect: "https"
          strip_query: false
          response_code: 308
    /non-existent2/: 
      get:
        redirect:
          # http://example.com/non-existent2/1/test?blabla=1 -> https://non-existent.com:8443/non-existent/1
          host_redirect: "non-existent.com"
          port_redirect: 8443
          scheme_redirect: "https"
          rewrite_regex:
            pattern: "^/non-existent2/(.*)/test"
            substitution: "/non-existent/\\1"
          strip_query: true
          response_code: 308
