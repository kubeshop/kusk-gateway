apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: kusk-devportal
    app.kubernetes.io/name: kusk-devportal
    app.kubernetes.io/version: v0.1.0
  name: kusk-devportal
  namespace: kusk-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: kusk-devportal
      app.kubernetes.io/name: kusk-devportal
  strategy: {}
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: kusk-devportal
        app.kubernetes.io/name: kusk-devportal
    spec:
      containers:
        - image: kubeshop/kusk-devportal:v0.1.0
          name: kusk-devportal
          imagePullPolicy: Always
          ports:
            - containerPort: 80
              name: http
              protocol: TCP
          resources:
            limits:
              memory: 512Mi
            requests:
                memory: 256Mi
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: kusk-devportal
  name: kusk-devportal
  namespace: kusk-system
spec:
  ports:
    - port: 80
      protocol: TCP
      targetPort: 80
  selector:
    app.kubernetes.io/instance: kusk-devportal
    app.kubernetes.io/name: kusk-devportal
---
apiVersion: gateway.kusk.io/v1alpha1
kind: EnvoyFleet
metadata:
  name: kusk-devportal-envoy-fleet
  namespace: kusk-system
spec:
  accesslog:
    format: text
  service:
    ports:
      - name: http
        port: 80
        protocol: TCP
        targetPort: http
      - name: https
        port: 443
        protocol: TCP
        targetPort: http
    type: LoadBalancer
---
apiVersion: gateway.kusk.io/v1alpha1
kind: StaticRoute
metadata:
  name: kusk-devportal
  namespace: kusk-system
  labels:
    kusk-managed: "true"
spec:
  upstream:
    service:
      name: kusk-devportal
      namespace: kusk-system
      port: 80
  fleet:
    name: kusk-devportal-envoy-fleet
    namespace: kusk-system
