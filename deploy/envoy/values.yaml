# replicaCount -- number of replicas for haproxy deployment.
replicaCount: 1

image:
  # image.repository -- image repository
  repository: envoyproxy/envoy
  # image.tag -- image tag (chart's appVersion value will be used if not set)
  tag: ""
  # image.pullPolicy -- image pull policy
  pullPolicy: IfNotPresent

# imagePullSecrets -- image pull secret for private images
imagePullSecrets: []
# nameOverride -- override name of the chart
nameOverride: ""
# fullnameOverride -- full name of the chart.
fullnameOverride: ""

serviceAccount:
  # serviceAccount.create -- specifies whether a service account should be created
  create: false
  # serviceAccount.annotations -- annotations to add to the service account
  annotations: {}
  # serviceAccount.name -- the name of the service account to use; if not set and create is true, a name is generated using the fullname template
  name:

# podSecurityContext -- specifies security settings for a pod
podSecurityContext: {}
# fsGroup: 2000

service:
  # service.type -- service type
  type: ClusterIP
  # service.port -- service port
  port: 80
  # service.annotations -- annotations to add to the service
  annotations: {}

# resources -- custom resource configuration
resources: {}
# limits:
#   cpu: 100m
#   memory: 128Mi
# requests:
#   cpu: 100m
#   memory: 128Mi

# nodeSelector -- node for scheduler pod assignment
nodeSelector: {}

# tolerations -- tolerations for scheduler pod assignment
tolerations: []

# affinity -- affinity for scheduler pod assignment
affinity: {}

# volumeMounts -- volume mounts
volumeMounts:
#  - name: data
#    mountPath: /envoy-data

# volumes -- volumes
volumes:
#  - name: data
#    emptyDir: {}

# env -- environment variables for the deployment
env:
#  - name: NODE_LABEL_REGION
#    value: "failure-domain.beta.kubernetes.io/region"
#  - name: NODE_LABEL_INSTANCE_TYPE
#    value: "beta.kubernetes.io/instance-type"

# args -- extra args to pass to container
args: []

serviceMonitor:
  # serviceMonitor.enabled -- ServiceMonitor CRD is created for a prometheus operator
  enabled: false
  # serviceMonitor.additionalLabels -- additional labels for service monitor
  additionalLabels: {}

livenessProbe:
  httpGet:
    # livenessProbe.httpGet.path -- path for liveness probe
    path: /
    # livenessProbe.httpGet.port -- port for liveness probe
    port: http

readinessProbe:
  httpGet:
    # readinessProbe.httpGet.path -- path for readiness probe
    path: /
    # readinessProbe.httpGet.port -- port for readiness probe
    port: http

# containerPort -- container port, should match static port_value from config.yaml
containerPort: 10000

# containerPort -- container port, should match admin port_value from config.yaml
containerAdminPort: 9901

node:
  cluster: test-cluster
  id: test-id

xds_cluster:
  address: 192.168.65.2
  port: 9999
