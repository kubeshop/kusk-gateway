"use strict";(self.webpackChunkkusk_gateway_docs_2=self.webpackChunkkusk_gateway_docs_2||[]).push([[8366],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=c(n),h=a,f=m["".concat(l,".").concat(h)]||m[h]||u[h]||o;return n?r.createElement(f,i(i({ref:t},p),{},{components:n})):r.createElement(f,i({ref:t},p))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},14570:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var r=n(87462),a=(n(67294),n(3905));const o={},i="Static Route",s={unversionedId:"reference/customresources/staticroute",id:"reference/customresources/staticroute",title:"Static Route",description:"Static Routes define the entrypoint to static applications.",source:"@site/docs/reference/customresources/staticroute.md",sourceDirName:"reference/customresources",slug:"/reference/customresources/staticroute",permalink:"/reference/customresources/staticroute",draft:!1,editUrl:"https://github.com/kubeshop/kusk-gateway/docs/reference/customresources/staticroute.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Envoy Fleet",permalink:"/reference/customresources/envoyfleet"},next:{title:"Install Kusk CLI",permalink:"/quick-links/install"}},l={},c=[{value:"<strong>Limitations</strong>",id:"limitations",level:2},{value:"<strong>Configuration Structure Description</strong>",id:"configuration-structure-description",level:2},{value:"<strong>Envoy Fleet</strong>",id:"envoy-fleet",level:2},{value:"<strong>Request Matching</strong>",id:"request-matching",level:2},{value:"<strong>Example</strong>",id:"example",level:2}],p={toc:c};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"static-route"},"Static Route"),(0,a.kt)("p",null,"Static Routes define the entrypoint to static applications.\nThis overcomes the limitation of OpenAPI specification that does not allow to define the entrypoint to a static application.\nIt is useful to set up the routing to a non-API application, e.g. static pages or images or to route to legacy, possibly external to the cluster, APIs."),(0,a.kt)("p",null,"Once the resource manifest is deployed, Kusk Gateway Manager will use it to configure routing for the Envoy Fleet."),(0,a.kt)("h2",{id:"limitations"},(0,a.kt)("strong",{parentName:"h2"},"Limitations")),(0,a.kt)("p",null,"Static Routes assume entrypoints to your upstream hosts or services live at ",(0,a.kt)("inlineCode",{parentName:"p"},"/"),"\nFor this reason, each ",(0,a.kt)("inlineCode",{parentName:"p"},"StaticRoute")," must have its own dedicated ",(0,a.kt)("inlineCode",{parentName:"p"},"EnvoyFleet")),(0,a.kt)("p",null,"Currently, the resource ",(0,a.kt)("strong",{parentName:"p"},"status")," field is not updated by the manager when the reconciliation of the configuration finishes."),(0,a.kt)("h2",{id:"configuration-structure-description"},(0,a.kt)("strong",{parentName:"h2"},"Configuration Structure Description")),(0,a.kt)("p",null,"The main elements of the configuration are in the ",(0,a.kt)("strong",{parentName:"p"},"spec")," field."),(0,a.kt)("p",null,"Below is the YAML structure of the configuration. Please read further for a full explanation."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: gateway.kusk.io/v1alpha1\nkind: StaticRoute\nmetadata:\n  name: staticroute-sample\nspec:\n  # Envoy Fleet (its name and namespace) to deploy the configuration to, here - deployed EnvoyFleet with the name "default" in the namespace "default".\n  # Optional, if not specified - single (default) fleet autodetection will be performed in the cluster.\n  fleet:\n    name: default\n    namespace: default\n  hosts: [<string>, <string>, ...]\n  auth:\n    # ouath2 | jwt | cloudentity | custom\n   ...\n  upstream:\n    # host | service | rewrite\n   service:\n     name: my-service\n     namespace: my-namespace\n     port: 80\n...\n')),(0,a.kt)("h2",{id:"envoy-fleet"},(0,a.kt)("strong",{parentName:"h2"},"Envoy Fleet")),(0,a.kt)("p",null,"The spec.",(0,a.kt)("strong",{parentName:"p"},"fleet")," optional field specifies to which Envoy Fleet (Envoy Proxy instances with the exposing K8s Service) this configuration applies.\nfleet.",(0,a.kt)("strong",{parentName:"p"},"name")," and fleet.",(0,a.kt)("strong",{parentName:"p"},"namespace")," reference the deployed Envoy Fleet Custom Resource name and namespace."),(0,a.kt)("p",null,"You can deploy a Static Route configuration in any namespace with any name and it will be applied to the specific Envoy Fleet.\nIf this option is missing, the autodetection will be performed to find the single fleet deployed in the Kubernetes cluster Fleet, which is then considered as the default Fleet.\nThe deployed Static Route custom resource will be changed to map to that fleet accordingly.\nIf there are multiple fleets deployed, spec.",(0,a.kt)("strong",{parentName:"p"},"fleet")," is required to specify which in the manifest."),(0,a.kt)("h2",{id:"request-matching"},(0,a.kt)("strong",{parentName:"h2"},"Request Matching")),(0,a.kt)("p",null,"We match the incoming request by HOST header, path and HTTP method."),(0,a.kt)("p",null,"The following fields specify matching:"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"hosts")," - Defines the list of HOST headers to which the current configuration applies. This will create the Envoy's VirtualHost with the same name and domain matching. Wildcards are possible, e.g. \"",(0,a.kt)("em",{parentName:"p"},'" means "any host".\nPrefix and suffix wildcards are supported, but not both (i.e. ```example.'),", ",(0,a.kt)("em",{parentName:"p"},"example.com",(0,a.kt)("inlineCode",{parentName:"em"},", but not ")),"example*```)."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"upstream")," - Defines the upstream host or service to which the request will be forwarded."),(0,a.kt)("h2",{id:"example"},(0,a.kt)("strong",{parentName:"h2"},"Example")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: gateway.kusk.io/v1alpha1\nkind: StaticRoute\nmetadata:\n  name: sample\nspec:\n  # should work with localhost, example.org, any host\n  hosts: [ "localhost", "*"]\n  auth:\n    oauth2:\n      issuer: https://auth.example.com\n      client_id: client_id\n      client_secret: client_secret\n      scopes:\n        - openid\n        - email\n        - profile\n      callback_path: /callback\n      callback_url: https://example.com/callback\n      redirect_url: https://example.com\n      token_path: /oauth2/token\n      user_info_path: /userinfo\n      user_info_url: https://auth.example.com/userinfo\n      user_info_mapping:\n        email: email\n        name: name\n        picture: picture\n  upstream:\n    host: "httpbin.org"\n')))}u.isMDXComponent=!0}}]);