"use strict";(self.webpackChunkkusk_gateway_docs_2=self.webpackChunkkusk_gateway_docs_2||[]).push([[126],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>m});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),c=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=c(e.components);return r.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),d=c(n),m=a,f=d["".concat(p,".").concat(m)]||d[m]||u[m]||o;return n?r.createElement(f,l(l({ref:t},s),{},{components:n})):r.createElement(f,l({ref:t},s))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=d;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var c=2;c<o;c++)l[c]=n[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},7700:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var r=n(87462),a=(n(67294),n(3905));const o={},l="kusk deploy",i={unversionedId:"reference/cli/deploy-cmd",id:"reference/cli/deploy-cmd",title:"kusk deploy",description:"The deploy accepts your OpenAPI definition as input, either as a local file or a URL pointing to your file",source:"@site/docs/reference/cli/deploy-cmd.md",sourceDirName:"reference/cli",slug:"/reference/cli/deploy-cmd",permalink:"/reference/cli/deploy-cmd",draft:!1,editUrl:"https://github.com/kubeshop/kusk-gateway/docs/reference/cli/deploy-cmd.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"kusk cluster install",permalink:"/reference/cli/install-cmd"},next:{title:"kusk mock",permalink:"/reference/cli/mock-cmd"}},p={},c=[{value:"<strong>Usage</strong>",id:"usage",level:4},{value:"<strong>Arguments</strong>",id:"arguments",level:4}],s={toc:c};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"kusk-deploy"},(0,a.kt)("inlineCode",{parentName:"h1"},"kusk deploy")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"deploy")," accepts your OpenAPI definition as input, either as a local file or a URL pointing to your file\nand deploys the API to Kusk Gateway."),(0,a.kt)("p",null,"Configuration of the API resource is done via the ",(0,a.kt)("inlineCode",{parentName:"p"},"x-kusk")," extension."),(0,a.kt)("h4",{id:"usage"},(0,a.kt)("strong",{parentName:"h4"},"Usage")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"kusk deploy -i spec.yaml \n")),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"Using the file watcher:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"kusk deploy -i spec.yaml --watch\n")),(0,a.kt)("p",null,"This will watch your file for changes and deploy them automatically for you."),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"OpenAPI definition from URL:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"kusk deploy -i https://raw.githubusercontent.com/$ORG_OR_USER/$REPO/myspec.yaml\n")),(0,a.kt)("p",null,"This will fetch the OpenAPI document from the provided URL and apply the API. "),(0,a.kt)("h4",{id:"arguments"},(0,a.kt)("strong",{parentName:"h4"},"Arguments")),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"Argument"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Description"),(0,a.kt)("th",{parentName:"tr",align:"center"},"Required?"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"--in")," / ",(0,a.kt)("inlineCode",{parentName:"td"},"-i")),(0,a.kt)("td",{parentName:"tr",align:"left"},"The file path or URL to OpenAPI definition to generate mappings from. e.g. --in apispec.yaml."),(0,a.kt)("td",{parentName:"tr",align:"center"},"\u2705")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("inlineCode",{parentName:"td"},"--watch / -w")),(0,a.kt)("td",{parentName:"tr",align:"left"},"Watches the file for changes."),(0,a.kt)("td",{parentName:"tr",align:"center"},"\u274c")))))}u.isMDXComponent=!0}}]);