"use strict";(self.webpackChunkkusk_gateway_docs_2=self.webpackChunkkusk_gateway_docs_2||[]).push([[982],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>g});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=p(n),g=r,k=d["".concat(s,".").concat(g)]||d[g]||c[g]||o;return n?a.createElement(k,i(i({ref:t},u),{},{components:n})):a.createElement(k,i({ref:t},u))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var p=2;p<o;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9873:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var a=n(7462),r=(n(7294),n(3905));const o={},i="Deploy an API",l={unversionedId:"getting-started/deploy-an-api",id:"getting-started/deploy-an-api",title:"Deploy an API",description:"Now that you've installed Kusk Gateway, let's have a look at how you can use OpenAPI to configure the operational and functional parts of your API.",source:"@site/docs/getting-started/deploy-an-api.md",sourceDirName:"getting-started",slug:"/getting-started/deploy-an-api",permalink:"/kusk-gateway/docs/getting-started/deploy-an-api",draft:!1,editUrl:"https://github.com/kubeshop/kusk-gateway/docs/getting-started/deploy-an-api.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Installing Kusk Gateway",permalink:"/kusk-gateway/docs/getting-started/installation"},next:{title:"Connect an upstream service",permalink:"/kusk-gateway/docs/getting-started/connect-a-service-to-the-api"}},s={},p=[{value:"<strong>1. Create an API Manifest</strong>",id:"1-create-an-api-manifest",level:3},{value:"<strong>2. Deploy the Gateway Configuration</strong>",id:"2-deploy-the-gateway-configuration",level:3},{value:"<strong>3. Test the API</strong>",id:"3-test-the-api",level:3},{value:"<strong>Read More</strong>",id:"read-more",level:3}],u={toc:p};function c(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"deploy-an-api"},"Deploy an API"),(0,r.kt)("p",null,"Now that you've installed Kusk Gateway, let's have a look at how you can use OpenAPI to configure the operational and functional parts of your API."),(0,r.kt)("h3",{id:"1-create-an-api-manifest"},(0,r.kt)("strong",{parentName:"h3"},"1. Create an API Manifest")),(0,r.kt)("p",null,"Create the file ",(0,r.kt)("inlineCode",{parentName:"p"},"api.yaml")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: gateway.kusk.io/v1alpha1\nkind: API\nmetadata:\n  name: hello-world\nspec: \n  fleet:\n    name: kusk-gateway-envoy-fleet\n    namespace: kusk-system\n  spec: |\n    openapi: 3.0.0\n    info:\n      title: simple-api\n      version: 0.1.0\n    x-kusk:\n      cors:\n        origins:\n          - \"*\"\n        methods:\n          - GET\n      mocking: \n        enabled: true\n    paths:\n      /hello:\n        get:\n          responses:\n            '200':\n              description: A simple hello world!\n              content:\n                text/plain:\n                  schema:\n                    type: string\n                  example: Hello from a mocked response!\n")),(0,r.kt)("p",null,"Kusk Gateway relies on OpenAPI to define your APIs and configure the gateway, all in one place, using the ",(0,r.kt)("inlineCode",{parentName:"p"},"x-kusk")," extension."),(0,r.kt)("p",null,"In this example, we have defined a simple ",(0,r.kt)("inlineCode",{parentName:"p"},"/hello")," endpoint and configured the gateway (under ",(0,r.kt)("inlineCode",{parentName:"p"},"x-kusk")," section) enabling CORS and API mocking."),(0,r.kt)("h3",{id:"2-deploy-the-gateway-configuration"},(0,r.kt)("strong",{parentName:"h3"},"2. Deploy the Gateway Configuration")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"kubectl apply -f api.yaml\n")),(0,r.kt)("h3",{id:"3-test-the-api"},(0,r.kt)("strong",{parentName:"h3"},"3. Test the API")),(0,r.kt)("p",null,"Given we have enabled gateway-level mocks, we don't need to implement the services to be able to test the API."),(0,r.kt)("p",null,"Get the External IP of Kusk-gateway as indicated in ",(0,r.kt)("a",{parentName:"p",href:"./installation/#get-the-gateways-external-ip"},"installing Kusk-gateway section"),"."),(0,r.kt)("p",null,"And query the ",(0,r.kt)("inlineCode",{parentName:"p"},"/hello")," endpoint"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"$ curl EXTERNAL_IP/hello\nHello world!\n")),(0,r.kt)("p",null,"In the ",(0,r.kt)("a",{parentName:"p",href:"/kusk-gateway/docs/getting-started/connect-a-service-to-the-api"},"next section"),", we'll cover how to connect your service to Kusk-gateway."),(0,r.kt)("h3",{id:"read-more"},(0,r.kt)("strong",{parentName:"h3"},"Read More")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Kusk Gateway ",(0,r.kt)("a",{parentName:"li",href:"/kusk-gateway/docs/reference/customresources/api"},"API manifest"),"."),(0,r.kt)("li",{parentName:"ul"},"The ",(0,r.kt)("a",{parentName:"li",href:"/kusk-gateway/docs/guides/working-with-extension"},"x-kusk extension"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/kusk-gateway/docs/guides/mocking"},"Mocking of APIs")," with Kusk.")))}c.isMDXComponent=!0}}]);