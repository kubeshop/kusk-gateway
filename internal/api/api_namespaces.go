/*
 * Kusk Gateway API
 *
 * This is the Kusk Gateway Management API
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package api

import (
	"net/http"
	"strings"
)

// NamespacesApiController binds http requests to an api service and writes the service results to the http response
type NamespacesApiController struct {
	service      NamespacesApiServicer
	errorHandler ErrorHandler
}

// NamespacesApiOption for how the controller is set up.
type NamespacesApiOption func(*NamespacesApiController)

// WithNamespacesApiErrorHandler inject ErrorHandler into controller
func WithNamespacesApiErrorHandler(h ErrorHandler) NamespacesApiOption {
	return func(c *NamespacesApiController) {
		c.errorHandler = h
	}
}

// NewNamespacesApiController creates a default api controller
func NewNamespacesApiController(s NamespacesApiServicer, opts ...NamespacesApiOption) Router {
	controller := &NamespacesApiController{
		service:      s,
		errorHandler: DefaultErrorHandler,
	}

	for _, opt := range opts {
		opt(controller)
	}

	return controller
}

// Routes returns all of the api route for the NamespacesApiController
func (c *NamespacesApiController) Routes() Routes {
	return Routes{
		{
			"GetNamespaces",
			strings.ToUpper("Get"),
			"/namespaces",
			c.GetNamespaces,
		},
	}
}

// GetNamespaces - Get a list of namespaces
func (c *NamespacesApiController) GetNamespaces(w http.ResponseWriter, r *http.Request) {
	result, err := c.service.GetNamespaces(r.Context())
	// If an error occurred, encode the error with the status code
	if err != nil {
		c.errorHandler(w, r, err, &result)
		return
	}
	// If no error, encode the body and the result code
	EncodeJSONResponse(result.Body, &result.Code, w)

}
