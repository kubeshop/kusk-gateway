/*
 * Kusk Gateway API
 *
 * This is the Kusk Gateway Management API
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package api

type ApiItem struct {
	Name string `json:"name"`

	Namespace string `json:"namespace"`

	Fleet ApiItemFleet `json:"fleet"`

	Service ApiItemService `json:"service"`

	Version string `json:"version"`
}

// AssertApiItemRequired checks if the required fields are not zero-ed
func AssertApiItemRequired(obj ApiItem) error {
	elements := map[string]interface{}{
		"name":      obj.Name,
		"namespace": obj.Namespace,
		"fleet":     obj.Fleet,
		"service":   obj.Service,
		"version":   obj.Version,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	if err := AssertApiItemFleetRequired(obj.Fleet); err != nil {
		return err
	}
	if err := AssertApiItemServiceRequired(obj.Service); err != nil {
		return err
	}
	return nil
}

// AssertRecurseApiItemRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of ApiItem (e.g. [][]ApiItem), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseApiItemRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aApiItem, ok := obj.(ApiItem)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertApiItemRequired(aApiItem)
	})
}
