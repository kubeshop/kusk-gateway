/*
 * Kusk Gateway API
 *
 * This is the Kusk Gateway Management API
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package api

type ServiceItem struct {
	Name string `json:"name"`

	Status string `json:"status"`

	Namespace string `json:"namespace"`

	ServiceType string `json:"serviceType"`

	Ports []ServicePortItem `json:"ports"`
}

// AssertServiceItemRequired checks if the required fields are not zero-ed
func AssertServiceItemRequired(obj ServiceItem) error {
	elements := map[string]interface{}{
		"name":        obj.Name,
		"namespace":   obj.Namespace,
		"serviceType": obj.ServiceType,
		"ports":       obj.Ports,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	for _, el := range obj.Ports {
		if err := AssertServicePortItemRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertRecurseServiceItemRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of ServiceItem (e.g. [][]ServiceItem), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseServiceItemRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aServiceItem, ok := obj.(ServiceItem)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertServiceItemRequired(aServiceItem)
	})
}
